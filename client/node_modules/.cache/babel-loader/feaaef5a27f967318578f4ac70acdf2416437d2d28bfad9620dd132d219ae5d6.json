{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vika\\\\Desktop\\\\Project\\\\telegram-web-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    if (window.Telegram && window.Telegram.WebApp) {\n      const tg = window.Telegram.WebApp;\n      tg.ready();\n    } else {\n      console.error('Telegram WebApp API is not available.');\n    }\n  }, []);\n  const sendMessage = async () => {\n    const chatId = 406403160;\n    const text = 'Привет от Telegram Mini App!';\n    try {\n      const response = await fetch('http://localhost:3001/sendMessage', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          chatId,\n          text\n        })\n      });\n      const data = await response.json();\n      console.log('Сообщение отправлено:', data);\n    } catch (error) {\n      console.error('Ошибка при отправке сообщения:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C \\u0432 Telegram Mini App!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.Telegram.WebApp.close(),\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","App","_s","window","Telegram","WebApp","tg","ready","console","error","sendMessage","chatId","text","response","fetch","method","headers","body","JSON","stringify","data","json","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","close","_c","$RefreshReg$"],"sources":["C:/Users/Vika/Desktop/Project/telegram-web-app/client/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  useEffect(() => {\n    if (window.Telegram && window.Telegram.WebApp) {\n      const tg = window.Telegram.WebApp;\n      tg.ready();\n    } else {\n      console.error('Telegram WebApp API is not available.');\n    }\n  }, []);\n\n  const sendMessage = async () => {\n    const chatId = 406403160;\n    const text = 'Привет от Telegram Mini App!';\n\n    try {\n      const response = await fetch('http://localhost:3001/sendMessage', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ chatId, text }),\n      });\n      const data = await response.json();\n      console.log('Сообщение отправлено:', data);\n    } catch (error) {\n      console.error('Ошибка при отправке сообщения:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Добро пожаловать в Telegram Mini App!</h1>\n        <button onClick={sendMessage}>Отправить сообщение</button>\n        <button onClick={() => window.Telegram.WebApp.close()}>Закрыть</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbJ,SAAS,CAAC,MAAM;IACd,IAAIK,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC7C,MAAMC,EAAE,GAAGH,MAAM,CAACC,QAAQ,CAACC,MAAM;MACjCC,EAAE,CAACC,KAAK,CAAC,CAAC;IACZ,CAAC,MAAM;MACLC,OAAO,CAACC,KAAK,CAAC,uCAAuC,CAAC;IACxD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,MAAM,GAAG,SAAS;IACxB,MAAMC,IAAI,GAAG,8BAA8B;IAE3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,MAAM;UAAEC;QAAK,CAAC;MACvC,CAAC,CAAC;MACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCb,OAAO,CAACc,GAAG,CAAC,uBAAuB,EAAEF,IAAI,CAAC;IAC5C,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACET,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBxB,OAAA;MAAQuB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BxB,OAAA;QAAAwB,QAAA,EAAI;MAAqC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9C5B,OAAA;QAAQ6B,OAAO,EAAEnB,WAAY;QAAAc,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1D5B,OAAA;QAAQ6B,OAAO,EAAEA,CAAA,KAAM1B,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACyB,KAAK,CAAC,CAAE;QAAAN,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC1B,EAAA,CApCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}